---
import Link from "./article/Link.astro";
import { getLanguageByExt, type FileExt } from "@/data/utils/languages";
import { Icon } from "astro-icon/components";

interface Props {
  id: string;
  name: string;
  url: string;
  extension: FileExt;
  path: string;
  tags: string[];
}

const { id, name, extension, url, path, tags } = Astro.props;
const { name: langName, color: langColor } = getLanguageByExt(extension);
---

<div class="card">
  <div class="body">
    <div class="header">
      <img
        class="avatar"
        width="16"
        height="16"
        src={`https://api.dicebear.com/9.x/identicon/svg?seed=${id}?size=16`}
      />
      <Link href={`/Problemas-del-Juez-Patito/problems/${id}`}>{path}</Link>
    </div>
    <div class="content">
      <p>{name}</p>
    </div>
    <div class="tags">
      {
        tags.map((tag) => (
          <a href={`/Problemas-del-Juez-Patito/tags/#${tag}`}>{tag}</a>
        ))
      }
    </div>
    <div class="details">
      <span class="language">
        <span style={`background-color: ${langColor}`} class="dot"></span>
        <span>{langName}</span>
      </span>
      <span class="id"></span>
    </div>
  </div>
  <div class="actions">
    <a
      github-act
      href={`https://github.com/RepolloDev/Problemas-del-Juez-Patito/tree/main/${path}`}
    >
      <Icon name="file-code" size={16} />
    </a>
    <a plataform-act href={url}>
      <Icon name="cross-reference" size={16} />
    </a>
  </div>
</div>

<style>
  .card {
    background-color: var(--color-base-200);
    border-radius: 0.5rem;
    border: 1px solid var(--color-border);
    padding: 1rem;
    display: grid;
    grid-template-columns: 1fr auto;
    gap: 1rem;
  }

  .body {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .header {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    line-break: anywhere;
  }

  .avatar {
    border-radius: 50%;
    border: 1px solid var(--color-border);
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tags a {
    border-radius: 0.5rem;
    background-color: var(--color-accend-dark);
    color: var(--color-accent);
    padding: 0.25rem;
    font-size: 0.75rem;
    font-weight: bold;
    text-decoration: none;
  }

  .tags a:hover {
    background-color: var(--color-accent);
    color: var(--color-text);
  }

  .content {
    font-size: medium;
  }

  .content p {
    margin: 0;
  }

  .details {
    display: flex;
    justify-content: space-between;
    margin-top: auto;
    color: var(--color-text-secondary);
    font-size: small;
  }

  .details .language {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    text-transform: capitalize;
  }

  .details .dot {
    border-radius: 50%;
    display: inline-block;
    height: 0.5rem;
    width: 0.5rem;
  }

  .actions {
    display: flex;
    gap: 0.5rem;
  }

  .actions a {
    background-color: var(--color-base-200);
    color: var(--color-text-secondary);
    text-decoration: none;
    padding: 0.25rem;
    border-radius: 0.5rem;
    border: 1px solid var(--color-border);
    width: 1rem;
    height: 1rem;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .actions a:hover {
    background-color: var(--color-base-100);
  }
</style>
