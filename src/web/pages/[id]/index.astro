---
import type { GetStaticPaths } from "astro";
import Layout from "@/web/components/common/Layout.astro";
import { UseScriptDB } from "@/data";
import type { ScriptData } from "@/data/types";
import Code from "@/web/components/article/Code.astro";
import Content from "@/web/components/article/Content.astro";
import Tag from "@/web/components/ui/Tag.astro";

export const getStaticPaths = (() => {
  return UseScriptDB.data.map((item) => ({
    params: { id: item.id },
  }));
}) satisfies GetStaticPaths;

const { id } = Astro.params;
const { name, tags, extension, path, url, content } = UseScriptDB.data.find(
  (item) => item.id === id
) as ScriptData;

const { description, steps, code } = content;
---

<Layout title={`JPP - Resolución del problema nro: ${id} - ${name}`}>
  <div class="presentation flex flex-col items-center gap-8">
    <div class="title flex flex-col items-center text-center">
      <h1>{name}</h1>
      <span class="badge badge-neutral font-bold">#{id}</span>
    </div>
    <div
      class="tags flex flex-wrap justify-center w-full md:w-3/4 lg:w-8/12 gap-4"
    >
      {tags.map((tag) => <Tag>{tag}</Tag>)}
    </div>
    <div class="actions flex gap-5">
      <a
        class="github btn btn-accent md:text-lg"
        href={`https://github.com/RepolloDev/Problemas-del-Juez-Patito/tree/main/${path}`}
      >
        Ver en Github
      </a>
      <a class="juez btn btn-success md:text-lg" href={url}> Ver en el Juez </a>
    </div>
  </div>
  <article class="prose lg:prose-xl min-w-full">
    <section>
      <h2>Descripción</h2>
      <Content id="description-section" content={description} />
    </section>
    <section>
      <h2>Pasos</h2>
      <Content id="steps-section" content={steps} />
    </section>
    <section>
      <h2>Código</h2>
      <Code id="code-section" code={code} extension={extension} path={path} />
    </section>
  </article>
</Layout>
